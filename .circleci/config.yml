version: 2

docker_login: &docker_login
  run:
    name: authentication
    command: |
      docker --version
      docker-compose --version
      docker login -u "$DOCKER_USER" -p "$DOCKER_PASS"

postgres_env: &postgres_env
  environment:
    - POSTGRES_USER: clux
    - POSTGRES_DB: postgres
    - POSTGRES_PASSWORD: foobar

workflows:
  version: 2
  flow:
    jobs:
      - musl_build
      - unit_test
      - integration_test:
          requires:
            - musl_build
      - docker_push:
          requires:
            - musl_build
          filters:
            branches:
              only:
                - master
jobs:
  musl_build:
    docker:
      - image: clux/muslrust:nightly
    working_directory: /volume
    steps:
      - checkout
      - restore_cache:
          key: cargo.registry
      - restore_cache:
          key: target-{{ checksum "Cargo.lock" }}
      - run: cargo build --release
      - save_cache:
          key: target-{{ checksum "Cargo.lock" }}
          paths:
            - target
      - store_artifacts:
          path: target/x86_64-unknown-linux-musl/release/webapp
          destination: webapp
      - save_cache:
          key: cargo.registry
          paths:
            - /root/.cargo
      - persist_to_workspace:
          root: target/x86_64-unknown-linux-musl/release/
          paths:
            - webapp

  unit_test:
    docker:
      - image: clux/muslrust:nightly
    working_directory: /volume
    steps:
      - checkout
      - restore_cache:
          key: cargo.registry
      - restore_cache:
          key: target-{{ checksum "Cargo.lock" }}
      - run: cargo test
      - run: cargo doc --no-deps

  integration_test:
    machine:
      enabled: true
      docker_layer_caching: true
    <<: *postgres_env
    steps:
      - checkout
      - attach_workspace:
          at: .
      # debug
      - run: docker images
      - run: make compose
      - run: make migrate
      - run: make test

  docker_push:
    machine:
      enabled: true
      docker_layer_caching: true
    steps:
      - checkout
      - attach_workspace:
          at: .
      - <<: *docker_login
      - run: make build-docker
      - run: make tag-latest
      - run: make tag-semver

# TODO: clippy + rustfmt on merge
